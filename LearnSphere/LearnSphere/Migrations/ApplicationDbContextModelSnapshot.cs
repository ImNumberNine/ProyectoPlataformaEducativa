// <auto-generated />
using System;
using LearnSphere.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnSphere.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descipcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Modulo");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completado")
                        .HasColumnType("bit");

                    b.Property<int>("IdArchivo")
                        .HasColumnType("int");

                    b.Property<int>("IdInscripcion")
                        .HasColumnType("int");

                    b.Property<int>("NotaArchivo")
                        .HasColumnType("int");

                    b.Property<string>("TareaRealizada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdArchivo");

                    b.HasIndex("IdInscripcion");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Curso", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Profesor")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Profesor");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha_Inscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Id_Curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Id_Curso");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_Curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Curso");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_Curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Curso");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContrasenaResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ContrasenaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DiaVerificado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiraToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenVerificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Archivo", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Modulo", "Modulo")
                        .WithMany("Archivos")
                        .HasForeignKey("Id_Modulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Calificacion", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Archivo", "Archivo")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdArchivo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearnSphere.Models.EntityModels.Inscripcion", "Inscripcion")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdInscripcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Curso", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Usuario", "Profesor")
                        .WithMany("Cursos")
                        .HasForeignKey("Id_Profesor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Inscripcion", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Usuario", "Usuario")
                        .WithMany("Inscripciones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LearnSphere.Models.EntityModels.Curso", "Curso")
                        .WithMany("Inscripciones")
                        .HasForeignKey("Id_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Modulo", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Curso", "Curso")
                        .WithMany("Modulos")
                        .HasForeignKey("Id_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Opinion", b =>
                {
                    b.HasOne("LearnSphere.Models.EntityModels.Curso", "Curso")
                        .WithMany("Opiniones")
                        .HasForeignKey("Id_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Archivo", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Curso", b =>
                {
                    b.Navigation("Inscripciones");

                    b.Navigation("Modulos");

                    b.Navigation("Opiniones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Inscripcion", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Modulo", b =>
                {
                    b.Navigation("Archivos");
                });

            modelBuilder.Entity("LearnSphere.Models.EntityModels.Usuario", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("Inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
